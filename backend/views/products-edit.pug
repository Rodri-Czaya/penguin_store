doctype html
html
    head
        title Edit Product
        style.
            body { 
                padding: 20px; 
                font-family: Arial, sans-serif;
            }
            .container {
                max-width: 600px;
                margin: 0 auto;
            }
            .form-group {
                margin-bottom: 15px;
            }
            label {
                display: block;
                margin-bottom: 5px;
            }
            input, textarea {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
            button {
                padding: 10px 20px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                margin-right: 10px;
            }
            .save-button {
                background: #4CAF50;
                color: white;
            }
            .delete-button {
                background: #f44336;
                color: white;
            }
            .header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 20px;
            }
            .back-link {
                color: #666;
                text-decoration: none;
            }
    body
        div.container
            div.header
                h1 Edit Product
                a.back-link(href=`/products?token=${token}`) ← Back to Products
            
            form#editProductForm
                div.form-group
                    label(for="name") Product Name
                    input(type="text", name="name", value=product.name required)
                
                div.form-group
                    label(for="price") Price ($)
                    input(type="number", name="price", step="0.01", value=product.price required)
                
                div.form-group
                    label(for="description") Description
                    textarea(name="description", rows="4")= product.description
                
                div.form-group
                    label(for="imageUrl") Image URL (optional)
                    input(type="text", name="imageUrl", value=product.imageUrl)
                
                button.save-button(type="submit") Save Changes
                button.delete-button(type="button", onclick="deleteProduct()") Delete Product

        script.
            const productId = '#{product._id}';
            const serverToken = '#{token}';

            document.getElementById('editProductForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const formData = new FormData(e.target);
                const data = {
                    name: formData.get('name'),
                    price: parseFloat(formData.get('price')),
                    description: formData.get('description'),
                    imageUrl: formData.get('imageUrl')
                };

                try {
                    const response = await fetch(`/products/${productId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${serverToken}`
                        },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        window.location.href = `/products?token=${serverToken}`;
                    } else {
                        const error = await response.json();
                        alert(error.message || 'Error updating product');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error updating product');
                }
            });

            async function deleteProduct() {
                if (!confirm('Are you sure you want to delete this product?')) {
                    return;
                }

                try {
                    const response = await fetch(`/products/${productId}`, {
                        method: 'DELETE',
                        headers: {
                            'Authorization': `Bearer ${serverToken}`
                        }
                    });

                    if (response.ok) {
                        window.location.href = `/products?token=${serverToken}`;
                    } else {
                        const error = await response.json();
                        alert(error.message || 'Error deleting product');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error deleting product');
                }
            }